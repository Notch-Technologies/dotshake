name: Create a release assets

on:
  push:
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  release_dotshake:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.5

      - name: github private modules access
        run: |
          git config --global url."https://${{ secrets.GO_MODULES_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
          export GOPRIVATE="github.com/Notch-Technologies/client-go"

      - name: cache go mod
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: install go mod
        run: go mod tidy

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --config .goreleaser_dotshake.yml --rm-dist
        env:
          BREW_TAP_REPO_TOKEN: ${{ secrets.BREW_TAP_REPO_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: upload 
        id: upload-dotshake
        uses: actions/upload-artifact@v3
        with:
          name: release-dotshake
          path: dist/
          retention-days: 3

  release_dotshaker:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
      
        - name: setup go
          uses: actions/setup-go@v3
          with:
            go-version: 1.18.5
      
        - name: github private modules access
          run: |
            git config --global url."https://${{ secrets.GO_MODULES_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
            export GOPRIVATE="github.com/Notch-Technologies/client-go"
      
        - name: cache go mod
          uses: actions/cache@v1
          with:
            path: ~/go/pkg/mod
            key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
            restore-keys: |
              ${{ runner.os }}-go-
      
        - name: install go mod
          run: go mod tidy
      
        - name: Run GoReleaser
          uses: goreleaser/goreleaser-action@v2
          with:
            version: latest
            args: release --config .goreleaser_dotshaker.yml --rm-dist
          env:
            BREW_TAP_REPO_TOKEN: ${{ secrets.BREW_TAP_REPO_TOKEN }}
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
        - name: upload 
          id: upload-dotshaker
          uses: actions/upload-artifact@v3
          with:
            name: release-dotshaker
            path: dist/
            retention-days: 3
  
  upload_debian_packages:
      runs-on: ubuntu-latest
      needs: [release_dotshake, release_dotshaker]
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0

        - uses: actions/download-artifact@v3
          id: download-dotshake
          with:
            name: release-dotshake

        - uses: actions/download-artifact@v3
          id: download-dotshaker
          with:
            name: release-dotshaker

        - name: setup ssh
          run: |
            mkdir -p /home/runner/.ssh
            touch /home/runner/.ssh/key && echo "$PKGS_SSH_KEY" > /home/runner/.ssh/key
            chmod 600 /home/runner/.ssh/key
          env:
            PKGS_SSH_KEY: ${{ secrets.PKGS_SSH_KEY }}

        - name: rsync deploy
          run: |
            rsync -e "ssh -i /home/runner/.ssh/key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" \
              -av ${{ steps.download-dotshake.outputs.download-path }}/*.deb \
              $PKGS_SSH_USERNAME@$PKGS_SSH_ADDRESS:$PKGS_DEBIAN_DIR
          env:
            PKGS_DEBIAN_DIR: ${{ secrets.PKGS_DEBIAN_DIR }}
            PKGS_SSH_ADDRESS: ${{ secrets.PKGS_SSH_ADDRESS }}
            PKGS_SSH_USERNAME: ${{ secrets.PKGS_SSH_USERNAME }}
